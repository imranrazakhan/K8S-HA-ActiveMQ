apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: activemq
  labels:
    app.kubernetes.io/name: activemq
    app: activemq
spec:
  replicas: 2
  serviceName: broker-svc
  selector:
    matchLabels:
      app.kubernetes.io/name: activemq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: activemq
        app: activemq
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - activemq
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 100
      initContainers:
        - name: init-activemq
          image: busybox:1.31.1
          command:
            - sh
            - "-c"
            - |
              if [[ $HOSTNAME == "activemq-0" ]]; then
                cp /mnt/config-map/activemq0.xml /mnt/conf/activemq.xml
              else
                cp /mnt/config-map/activemq1.xml /mnt/conf/activemq.xml
              fi
          volumeMounts:
            - name: conf
              mountPath: /mnt/conf
            - name: config-xml
              mountPath: /mnt/config-map
      containers:
        - name: activemq
          image: rmohr/activemq:5.15.9-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8161
            - name: mqtt
              containerPort: 1883
              protocol: TCP
            - name: tcp
              containerPort: 61616
              protocol: TCP
            - name: prometheus
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /admin
              port: 8161
              httpHeaders:
                - name: Authorization
                  value: Basic YWRtaW46YWRtaW4=
            failureThreshold: 5
            initialDelaySeconds: 2
            periodSeconds: 1
            successThreshold: 1
          # Gracefully stop ActiveMQ on pod deletion or image upgrade.
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "/bin/sleep 3"]
          volumeMounts:
            - mountPath: /opt/activemq/conf/activemq.xml
              name: conf
              subPath: activemq.xml
            - mountPath: /opt/activemq/conf/log4j.properties
              name: active-mq-log4j
              subPath: log4j.properties
            - mountPath: /scripts
              name: readiness-scripts
      volumes:
        - name: conf
          emptyDir: {}
        - name: config-xml
          configMap:
            name: active-mq-xml
        - name: active-mq-log4j
          configMap:
            name: active-mq-log4j
        - name: readiness-scripts
          configMap:
            name: readiness-scripts
            defaultMode: 0755
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: broker-svc
  labels:
    app.kubernetes.io/name: activemq
spec:
  selector:
    app: activemq
  ports:
    - name: broker
      protocol: TCP
      port: 61616
      targetPort: 61616
    - name: admin
      protocol: TCP
      port: 8161
      targetPort: 8161
    - name: mqtt
      protocol: TCP
      port: 1883
      targetPort: 1883
---
kind: Service
apiVersion: v1
metadata:
  name: activemq-prometheus
  labels:
    app: activemq
spec:
  selector:
    app.kubernetes.io/name: activemq
  ports:
    - name: prometheus
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: active-mq-xml
data:
  activemq0.xml: |
    <beans
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

        <!-- Allows us to use system properties as variables in this configuration file -->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <value>file:${activemq.conf}/credentials.properties</value>
            </property>
        </bean>

       <!-- Allows accessing the server log -->
        <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
              lazy-init="false" scope="singleton"
              init-method="start" destroy-method="stop">
        </bean>

        <broker xmlns="http://activemq.apache.org/schema/core" brokerName="broker0" brokerId="A" persistent="false" useJmx="true">

            <networkConnectors>
                <networkConnector name="OpenBroker1" uri="static:(tcp://activemq-1.broker-svc.default.svc.cluster.local:61616)" networkTTL="3" />
           </networkConnectors>

           <transportConnectors>
              <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxInactivityDuration=65000&amp;wireFormat.maxFrameSize=104857600"/>
              <transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxInactivityDuration=65000&amp;wireFormat.maxFrameSize=104857600"/>
           </transportConnectors>

            <destinationPolicy>
                <policyMap>
                  <policyEntries>

                      <policyEntry topic=">" topicPrefetch="100" expireMessagesPeriod="60000">
                        <pendingMessageLimitStrategy>
                          <constantPendingMessageLimitStrategy limit="1000"/>
                        </pendingMessageLimitStrategy>
                        <deadLetterStrategy>
                           <discarding/>
                        </deadLetterStrategy>
                      </policyEntry>

                      <policyEntry queue=">">
                        <deadLetterStrategy>
                           <discarding/>
                        </deadLetterStrategy>
                      </policyEntry>


                  </policyEntries>
                </policyMap>
            </destinationPolicy>

            <managementContext>
                <managementContext createConnector="true" connectorPort="1099"/>
            </managementContext>


              <!--
                The systemUsage controls the maximum amount of space the broker will
                use before disabling caching and/or slowing down producers. For more information, see:
                http://activemq.apache.org/producer-flow-control.html
              -->
              <systemUsage>
                <systemUsage>
                    <memoryUsage>
                        <memoryUsage percentOfJvmHeap="70" />
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="100 gb"/>
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="50 gb"/>
                    </tempUsage>
                </systemUsage>
            </systemUsage>

            <!-- destroy the spring context on shutdown to stop jetty -->
            <shutdownHooks>
                <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
            </shutdownHooks>

        </broker>

        <import resource="jetty.xml"/>

    </beans>
    <!-- END SNIPPET: example -->

  activemq1.xml: |
    <beans
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

        <!-- Allows us to use system properties as variables in this configuration file -->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <value>file:${activemq.conf}/credentials.properties</value>
            </property>
        </bean>

       <!-- Allows accessing the server log -->
        <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
              lazy-init="false" scope="singleton"
              init-method="start" destroy-method="stop">
        </bean>

        <broker xmlns="http://activemq.apache.org/schema/core" brokerName="broker1" brokerId="B" persistent="false" useJmx="true">

            <networkConnectors>
                <networkConnector name="OpenBroker0" uri="static:(tcp://activemq-0.broker-svc.default.svc.cluster.local:61616)" networkTTL="3" />
            </networkConnectors>

            <transportConnectors>
                <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxInactivityDuration=65000&amp;wireFormat.maxFrameSize=104857600"/>
                <transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxInactivityDuration=65000&amp;wireFormat.maxFrameSize=104857600"/>
            </transportConnectors>

            <destinationPolicy>
                <policyMap>
                  <policyEntries>

                      <policyEntry topic=">" topicPrefetch="100" expireMessagesPeriod="60000">
                        <pendingMessageLimitStrategy>
                          <constantPendingMessageLimitStrategy limit="1000"/>
                        </pendingMessageLimitStrategy>
                        <deadLetterStrategy>
                           <discarding/>
                        </deadLetterStrategy>
                      </policyEntry>

                      <policyEntry queue=">">
                        <deadLetterStrategy>
                           <discarding/>
                        </deadLetterStrategy>
                      </policyEntry>


                  </policyEntries>
                </policyMap>
            </destinationPolicy>

            <managementContext>
                <managementContext createConnector="true" connectorPort="1099"/>
            </managementContext>


              <!--
                The systemUsage controls the maximum amount of space the broker will
                use before disabling caching and/or slowing down producers. For more information, see:
                http://activemq.apache.org/producer-flow-control.html
              -->
              <systemUsage>
                <systemUsage>
                    <memoryUsage>
                        <memoryUsage percentOfJvmHeap="70" />
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="100 gb"/>
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="50 gb"/>
                    </tempUsage>
                </systemUsage>
            </systemUsage>



            <!-- destroy the spring context on shutdown to stop jetty -->
            <shutdownHooks>
                <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
            </shutdownHooks>

        </broker>

        <import resource="jetty.xml"/>

    </beans>
    <!-- END SNIPPET: example -->
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: active-mq-log4j
data:
  log4j.properties: |
    ## ---------------------------------------------------------------------------
    ## Licensed to the Apache Software Foundation (ASF) under one or more
    ## contributor license agreements.  See the NOTICE file distributed with
    ## this work for additional information regarding copyright ownership.
    ## The ASF licenses this file to You under the Apache License, Version 2.0
    ## (the "License"); you may not use this file except in compliance with
    ## the License.  You may obtain a copy of the License at
    ##
    ## http://www.apache.org/licenses/LICENSE-2.0
    ##
    ## Unless required by applicable law or agreed to in writing, software
    ## distributed under the License is distributed on an "AS IS" BASIS,
    ## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ## See the License for the specific language governing permissions and
    ## limitations under the License.
    ## ---------------------------------------------------------------------------

    #
    # This file controls most of the logging in ActiveMQ which is mainly based around
    # the commons logging API.
    #
    log4j.rootLogger=INFO, console, logfile
    log4j.logger.org.apache.activemq.spring=WARN
    log4j.logger.org.apache.activemq.web.handler=WARN
    log4j.logger.org.springframework=WARN
    log4j.logger.org.apache.xbean=WARN
    log4j.logger.org.apache.camel=INFO
    log4j.logger.org.eclipse.jetty=WARN

    # When debugging or reporting problems to the ActiveMQ team,
    # comment out the above lines and uncomment the next.

    #log4j.rootLogger=DEBUG, logfile, console

    # Or for more fine grained debug logging uncomment one of these
    #log4j.logger.org.apache.activemq=DEBUG
    #log4j.logger.org.apache.camel=DEBUG
    #log4j.logger.org.apache.activemq.store.kahadb=TRACE, kahadb
    #log4j.logger.org.apache.activemq.store.kahadb.MessageDatabase=INFO, kahadb

    # Console appender
    log4j.appender.console=org.apache.log4j.ConsoleAppender
    log4j.appender.console.layout=org.apache.log4j.PatternLayout
    #log4j.appender.console.layout.ConversionPattern=%5p | %m%n
    log4j.appender.console.layout.ConversionPattern=%d | %-5p | %m | %c | %t%n%throwable{full}
    log4j.appender.console.threshold=INFO

    # File appender
    log4j.appender.logfile=org.apache.log4j.RollingFileAppender
    log4j.appender.logfile.file=${activemq.data}/activemq.log
    log4j.appender.logfile.maxFileSize=6144KB
    log4j.appender.logfile.maxBackupIndex=10
    log4j.appender.logfile.append=true
    log4j.appender.logfile.layout=org.apache.log4j.EnhancedPatternLayout
    log4j.appender.logfile.layout.ConversionPattern=%d | %-5p | %m | %c | %t%n%throwable{full}

    # you can control the rendering of exception in the ConversionPattern
    # by default, we display the full stack trace
    # if you want to display short form of the exception, you can use
    #
    # log4j.appender.logfile.layout.ConversionPattern=%d | %-5p | %m | %c | %t%n%throwable{short}
    #
    # a classic issue with filebeat/logstash is about multiline exception. The following pattern
    # allows to work smoothly with filebeat/logstash
    #
    # log4j.appender.logfile.layour.ConversionPattern=%d | %-5p | %m | %c | %t%n%replace(%throwable){\n}{ }
    #

    # use some of the following patterns to see MDC logging data
    #
    # %X{activemq.broker}
    # %X{activemq.connector}
    # %X{activemq.destination}
    #
    # e.g.
    #
    # log4j.appender.logfile.layout.ConversionPattern=%d | %-20.20X{activemq.connector} | %-5p | %m | %c | %t%n

    log4j.throwableRenderer=org.apache.log4j.EnhancedThrowableRenderer

    ###########
    # Audit log
    ###########

    log4j.additivity.org.apache.activemq.audit=false
    log4j.logger.org.apache.activemq.audit=INFO, audit

    log4j.appender.audit=org.apache.log4j.RollingFileAppender
    log4j.appender.audit.file=${activemq.data}/audit.log
    log4j.appender.audit.maxFileSize=1024KB
    log4j.appender.audit.maxBackupIndex=5
    log4j.appender.audit.append=true
    log4j.appender.audit.layout=org.apache.log4j.PatternLayout
    log4j.appender.audit.layout.ConversionPattern=%-5p | %m | %t%n
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: activemq-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: activemq
